%form#payment-form{:action => "/card_token", :method => "POST"}
  %span.payment-errors
  %input{:type => "hidden", :value=>"#{@cart.id}", :name=>"cart_id"}/
  %input{:type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token}/
  .form-row
    %label
      %span Card Number
      %input{"data-stripe" => "number", :size => "20", :type => "text"}/
  .form-row
    %label
      %span CVC
      %input{"data-stripe" => "cvc", :size => "4", :type => "text"}/
  .form-row
    %label
      %span Expiration (MM/YYYY)
      %input{"data-stripe" => "exp-month", :size => "2", :type => "text"}/
    %span /
    %input{"data-stripe" => "exp-year", :size => "4", :type => "text"}/
  %button{:type => "submit"} Submit Payment
    
:javascript
  // This identifies your website in the createToken call below
  Stripe.setPublishableKey('pk_test_r4UgPCekOfiEzfJ3QqIVpqsS');
    
  $('#payment-form').submit(function(event) {
    var $form = $(this);
  
    // Disable the submit button to prevent repeated clicks
    $form.find('button').prop('disabled', true);
  
    Stripe.card.createToken($form, stripeResponseHandler);
  
    // Prevent the form from submitting with the default action
    return false;
  });
    
  function stripeResponseHandler(status, response) {
    var $form = $('#payment-form');
    
    if (response.error) {
      // Show the errors on the form
      $form.find('.payment-errors').text(response.error.message);
      $form.find('button').prop('disabled', false);
    } else {
      // response contains id and card, which contains additional card details
      var token = response.id;
      var card_id = response.card.id;
      // Insert the token into the form so it gets submitted to the server
      $form.append($('<input type="hidden" name="stripeToken" />').val(token));
      $form.append($('<input type="hidden" name="stripeCardId" />').val(card_id));
      // and submit
      $form.get(0).submit();
    }
  };
